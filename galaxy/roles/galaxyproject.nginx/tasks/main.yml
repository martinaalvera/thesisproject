---
# main tasks file for galaxyproject.nginx

- include: apt.yml
  when: ansible_os_family == "Debian"

- include: yum.yml
  when: ansible_os_family == "RedHat"

- include: pkgin.yml
  when: ansible_pkg_mgr == "pkgin"

- name: Collect nginx -V output
  command: nginx -V
  register: nginx_v_out
  changed_when: false

- name: Make nginx -V output a single line
  set_fact:
    nginx_v: "{{ nginx_v_out.stderr | regex_replace('\\n', ' ') }}"

- name: Register nginx-reported facts
  set_fact:
    nginx_version: "{{ nginx_v | regex_replace('.*nginx version: nginx/([\\d.]+).*', '\\1') }}"
    nginx_openssl_version: "{{ nginx_v | regex_replace('.*built with OpenSSL ([\\d.]+[a-z]*).*', '\\1') }}"

- name: Create supervisor config
  template:
    src: supervisord.conf.j2
    dest: "{{ supervisord_conf_dir }}/nginx.conf"
  notify:
    - update supervisord
  when: nginx_supervisor and supervisord_conf_dir is defined

- name: Set additional config options
  template:
    src: http_options.conf.j2
    dest: "{{ nginx_conf_dir }}/conf.d/http_options.conf"
    mode: 0444
    backup: yes
  when: nginx_conf_http is defined
  notify:
    - restart nginx
    - supervisorctl restart nginx

- name: Copy additional configs
  template:
    src: "templates/nginx/{{ item }}.j2"
    dest: "{{ nginx_conf_dir }}/{{ item }}"
    mode: 0444
    backup: yes
  with_items: "{{ nginx_extra_configs | default([]) }}"
  when: nginx_extra_configs is defined

- name: Include server (vhost) tasks
  import_tasks: server.yml

- name: Include SSL configuration tasks
  include_tasks: ssl-{{ __nginx_sslmode }}.yml
  when: __nginx_ssl

- name: Include SSL server (vhost) tasks
  #import_tasks: server.yml
  include_tasks: server.yml
  vars:
    nginx_servers: "{{ nginx_ssl_servers | default([]) }}"
  when: nginx_ssl_servers is defined

- name: Enable nginx (supervisor)
  supervisorctl:
    name: "{{ nginx_supervisor_service_name }}"
    state: started
    config: "{{ supervisord_conf_path | default(omit) }}"
    supervisorctl_path: "{{ supervisord_prefix }}/bin/supervisorctl"
  when: nginx_supervisor and supervisord_prefix is defined

- name: Enable nginx (service)
  service:
    name: nginx
    state: started
    enabled: true
  when: not nginx_supervisor
